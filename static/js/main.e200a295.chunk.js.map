{"version":3,"sources":["Components/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goodsList","className","map","good","goodsFromServer","App","state","goods","initialButtonVisible","sortByName","sortByLength","reverse","goodsLength","letStart","setState","prevState","reset","changeGoodsLength","value","this","visibleGoods","filter","length","sort","a","b","localeCompare","type","onClick","htmlFor","name","min","max","defaultValue","onChange","target","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uQAiBeA,EAVoB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACpC,OACE,oBAAIC,UAAU,OAAd,SACGD,EAAUE,KAAI,SAAAC,GACb,OAAO,oBAAIF,UAAU,aAAd,SAAuCE,GAAPA,SCPzCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAYIC,E,4MACJC,MAAQ,CACNC,MAAO,CAAC,IACRC,sBAAsB,EACtBC,YAAY,EACZC,cAAc,EACdC,SAAS,EACTC,YAAa,K,EAGfC,SAAW,WACT,EAAKC,SAAS,CAAEP,MAAM,GAAD,OAAMH,KAC3B,EAAKU,SAAS,CAAEN,sBAAsB,K,EAGxCC,WAAa,WACX,EAAKK,UAAS,SAAAC,GAAS,MAAK,CAC1BN,YAAaM,EAAUN,gB,EAI3BC,aAAe,WACb,EAAKI,UAAS,SAAAC,GAAS,MAAK,CAC1BL,cAAeK,EAAUL,kB,EAI7BM,MAAQ,WACF,EAAKV,MAAMC,QAAUH,GACvB,EAAKU,SAAS,CAAEP,MAAM,GAAD,OAAMH,KAG7B,EAAKU,SAAS,CAAEF,YAAa,O,EAG/BD,QAAU,WACR,EAAKG,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,SAAUI,EAAUJ,a,EAIxBM,kBAAoB,SAACC,GACnB,EAAKJ,SAAS,CAAEF,YAAaM,K,4CAG/B,WAAU,IAAD,OACP,EAOIC,KAAKb,MANPC,EADF,EACEA,MACAC,EAFF,EAEEA,qBACAC,EAHF,EAGEA,WACAC,EAJF,EAIEA,aACAC,EALF,EAKEA,QACAC,EANF,EAMEA,YAGIQ,EAAeb,EAAMc,QAAO,SAAAlB,GAAI,OAAIA,EAAKmB,SAAWV,KAiB1D,OAfIF,IACFU,EAAaG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEF,OAASG,EAAEH,UACzCH,KAAKb,MAAMI,cAAgBA,GAGzBD,IACFW,EAAaG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5CN,KAAKb,MAAMG,YAAcA,GAGvBE,IACFS,EAAaT,UACbQ,KAAKb,MAAMK,SAAWA,GAItB,sBAAKV,UAAU,MAAf,WACIO,GACA,sBAAKP,UAAU,iBAAf,UACE,oBAAIA,UAAU,0BAAd,+BAAwDmB,EAAaE,OAArE,YACA,qBAAKrB,UAAU,0BAAf,SACE,cAAC,EAAD,CAAWD,UAAWoB,MAGxB,sBAAKnB,UAAU,uBAAf,UACE,wBACE0B,KAAK,SACL1B,UAAU,6BACV2B,QAAST,KAAKV,WAHhB,0BAQA,wBACEkB,KAAK,SACL1B,UAAU,6BACV2B,QAAST,KAAKT,aAHhB,4BAQA,wBACEiB,KAAK,SACL1B,UAAU,6BACV2B,QAAST,KAAKR,QAHhB,qBAQA,wBACEgB,KAAK,SACL1B,UAAU,6BACV2B,QAAST,KAAKH,MAHhB,sBASF,sBAAKf,UAAU,YAAf,UACE,uBACE4B,QAAQ,aACR5B,UAAU,oBAFZ,yBAMA,uBACE6B,KAAK,aACLH,KAAK,SACL1B,UAAU,8CACV8B,IAAI,IACJC,IAAI,KACJC,aAAcd,KAAKb,MAAMM,YACzBsB,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OACX,EAAKlB,kBAAkBkB,EAAOjB,gBAOvCV,GACC,wBACEmB,KAAK,SACL1B,UAAU,oBACV2B,QAAST,KAAKN,SAHhB,0B,GA1IQuB,IAAMC,WAuJThC,IC9KfiC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e200a295.chunk.js","sourcesContent":["import React from 'react';\nimport './GoodsList.scss';\n\ntype Props = {\n  goodsList: string[],\n};\n\nconst GoodsList: React.FC<Props> = ({ goodsList }) => {\n  return (\n    <ul className=\"list\">\n      {goodsList.map(good => {\n        return <li className=\"list__item\" key={good}>{good}</li>;\n      })}\n    </ul>\n  );\n};\n\nexport default GoodsList;\n","import React from 'react';\nimport './App.scss';\nimport GoodsList from './Components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goods: string[],\n  initialButtonVisible: boolean,\n  sortByName: boolean,\n  sortByLength: boolean,\n  reverse: boolean,\n  goodsLength: string,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    goods: [''],\n    initialButtonVisible: true,\n    sortByName: false,\n    sortByLength: false,\n    reverse: false,\n    goodsLength: '1',\n  };\n\n  letStart = () => {\n    this.setState({ goods: [...goodsFromServer] });\n    this.setState({ initialButtonVisible: false });\n  };\n\n  sortByName = () => {\n    this.setState(prevState => ({\n      sortByName: !prevState.sortByName,\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState(prevState => ({\n      sortByLength: !prevState.sortByLength,\n    }));\n  };\n\n  reset = () => {\n    if (this.state.goods !== goodsFromServer) {\n      this.setState({ goods: [...goodsFromServer] });\n    }\n\n    this.setState({ goodsLength: '1' });\n  };\n\n  reverse = () => {\n    this.setState(prevState => ({\n      reverse: !prevState.reverse,\n    }));\n  };\n\n  changeGoodsLength = (value: string) => {\n    this.setState({ goodsLength: value });\n  };\n\n  render() {\n    const {\n      goods,\n      initialButtonVisible,\n      sortByName,\n      sortByLength,\n      reverse,\n      goodsLength,\n    } = this.state;\n\n    const visibleGoods = goods.filter(good => good.length >= +goodsLength);\n\n    if (sortByLength) {\n      visibleGoods.sort((a, b) => a.length - b.length);\n      this.state.sortByLength = !sortByLength;\n    }\n\n    if (sortByName) {\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      this.state.sortByName = !sortByName;\n    }\n\n    if (reverse) {\n      visibleGoods.reverse();\n      this.state.reverse = !reverse;\n    }\n\n    return (\n      <div className=\"App\">\n        {!initialButtonVisible && (\n          <div className=\"App__container\">\n            <h1 className=\"title has-text-centered\">{`You can see ${visibleGoods.length} goods`}</h1>\n            <div className=\"App__flex-box container\">\n              <GoodsList goodsList={visibleGoods} />\n            </div>\n\n            <div className=\"App__buttons buttons\">\n              <button\n                type=\"button\"\n                className=\"button is-primary is-small\"\n                onClick={this.sortByName}\n              >\n                Sort by name\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"button is-primary is-small\"\n                onClick={this.sortByLength}\n              >\n                Sort by length\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"button is-primary is-small\"\n                onClick={this.reverse}\n              >\n                Reverse\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"button is-primary is-small\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            </div>\n\n            <div className=\"container\">\n              <label\n                htmlFor=\"itemLength\"\n                className=\"has-text-centered\"\n              >\n                Word length\n              </label>\n              <input\n                name=\"itemLength\"\n                type=\"number\"\n                className=\"has-text-centered input is-primary is-small\"\n                min=\"1\"\n                max=\"10\"\n                defaultValue={this.state.goodsLength}\n                onChange={({ target }) => {\n                  this.changeGoodsLength(target.value);\n                }}\n              />\n            </div>\n          </div>\n        )}\n\n        {initialButtonVisible && (\n          <button\n            type=\"button\"\n            className=\"button is-primary\"\n            onClick={this.letStart}\n          >\n            Start\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}